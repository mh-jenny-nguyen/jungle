{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTimestamp;\nexports.ValidationError = void 0;\n\nclass ValidationError extends Error {\n  constructor(name, message) {\n    super(\"Invalid \\\"\".concat(name, \"\\\" provided, \") + message);\n    this.name = 'ValidationError';\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nfunction validateTimestamp(name, timestamp, options) {\n  options = options || {};\n\n  if (typeof timestamp !== 'number') {\n    throw new ValidationError(name, \"only numeric values are allowed for timestamps, provided type was \\\"\".concat(typeof timestamp, \"\\\"\"));\n  }\n\n  if (options.maximum && timestamp > options.maximum) {\n    throw new ValidationError(name, \"value (\".concat(timestamp, \") cannot be further in the future than expected maximum (\").concat(options.maximum, \")\"));\n  }\n\n  if (options.now && timestamp < options.now) {\n    throw new ValidationError(name, \"value (\".concat(timestamp, \") cannot be in the past, current time was \").concat(options.now));\n  }\n}","map":{"version":3,"sources":["C:/xampp/htdocs/keta-blog/node_modules/contentful/dist/es-modules/utils/validate-timestamp.js"],"names":["Object","defineProperty","exports","value","default","validateTimestamp","ValidationError","Error","constructor","name","message","concat","timestamp","options","maximum","now"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;AACAH,OAAO,CAACI,eAAR,GAA0B,KAAK,CAA/B;;AAEA,MAAMA,eAAN,SAA8BC,KAA9B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,UAAM,aAAaC,MAAb,CAAoBF,IAApB,EAA0B,eAA1B,IAA6CC,OAAnD;AACA,SAAKD,IAAL,GAAY,iBAAZ;AACD;;AAJiC;;AAQpCP,OAAO,CAACI,eAAR,GAA0BA,eAA1B;;AAEA,SAASD,iBAAT,CAA2BI,IAA3B,EAAiCG,SAAjC,EAA4CC,OAA5C,EAAqD;AACnDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAIN,eAAJ,CAAoBG,IAApB,EAA0B,uEAAuEE,MAAvE,CAA8E,OAAOC,SAArF,EAAgG,IAAhG,CAA1B,CAAN;AACD;;AAED,MAAIC,OAAO,CAACC,OAAR,IAAmBF,SAAS,GAAGC,OAAO,CAACC,OAA3C,EAAoD;AAClD,UAAM,IAAIR,eAAJ,CAAoBG,IAApB,EAA0B,UAAUE,MAAV,CAAiBC,SAAjB,EAA4B,2DAA5B,EAAyFD,MAAzF,CAAgGE,OAAO,CAACC,OAAxG,EAAiH,GAAjH,CAA1B,CAAN;AACD;;AAED,MAAID,OAAO,CAACE,GAAR,IAAeH,SAAS,GAAGC,OAAO,CAACE,GAAvC,EAA4C;AAC1C,UAAM,IAAIT,eAAJ,CAAoBG,IAApB,EAA0B,UAAUE,MAAV,CAAiBC,SAAjB,EAA4B,4CAA5B,EAA0ED,MAA1E,CAAiFE,OAAO,CAACE,GAAzF,CAA1B,CAAN;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = validateTimestamp;\nexports.ValidationError = void 0;\n\nclass ValidationError extends Error {\n  constructor(name, message) {\n    super(\"Invalid \\\"\".concat(name, \"\\\" provided, \") + message);\n    this.name = 'ValidationError';\n  }\n\n}\n\nexports.ValidationError = ValidationError;\n\nfunction validateTimestamp(name, timestamp, options) {\n  options = options || {};\n\n  if (typeof timestamp !== 'number') {\n    throw new ValidationError(name, \"only numeric values are allowed for timestamps, provided type was \\\"\".concat(typeof timestamp, \"\\\"\"));\n  }\n\n  if (options.maximum && timestamp > options.maximum) {\n    throw new ValidationError(name, \"value (\".concat(timestamp, \") cannot be further in the future than expected maximum (\").concat(options.maximum, \")\"));\n  }\n\n  if (options.now && timestamp < options.now) {\n    throw new ValidationError(name, \"value (\".concat(timestamp, \") cannot be in the past, current time was \").concat(options.now));\n  }\n}"]},"metadata":{},"sourceType":"script"}