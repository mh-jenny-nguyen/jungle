{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/xampp/htdocs/keta-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/xampp/htdocs/keta-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pagedSync;\n\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\n\nvar _contentfulResolveResponse = _interopRequireDefault(require(\"contentful-resolve-response\"));\n\nvar _stringifySafe = _interopRequireDefault(require(\"./mixins/stringify-safe\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\n\n\nfunction pagedSync(_x, _x2) {\n  return _pagedSync.apply(this, arguments);\n}\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\n\n\nfunction _pagedSync() {\n  _pagedSync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(http, query) {\n    var options,\n        defaultOptions,\n        _objectSpread2,\n        resolveLinks,\n        removeUnresolved,\n        paginate,\n        syncOptions,\n        response,\n        mappedResponseItems,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n            if (!(!query || !query.initial && !query.nextSyncToken && !query.nextPageToken)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n\n          case 3:\n            if (!(query && query.content_type && !query.type)) {\n              _context.next = 7;\n              break;\n            }\n\n            query.type = 'Entry';\n            _context.next = 9;\n            break;\n\n          case 7:\n            if (!(query && query.content_type && query.type && query.type !== 'Entry')) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n\n          case 9:\n            defaultOptions = {\n              resolveLinks: true,\n              removeUnresolved: false,\n              paginate: true\n            };\n            _objectSpread2 = _objectSpread(_objectSpread({}, defaultOptions), options), resolveLinks = _objectSpread2.resolveLinks, removeUnresolved = _objectSpread2.removeUnresolved, paginate = _objectSpread2.paginate;\n            syncOptions = {\n              paginate: paginate\n            };\n            _context.next = 14;\n            return getSyncPage(http, [], query, syncOptions);\n\n          case 14:\n            response = _context.sent;\n\n            // clones response.items used in includes because we don't want these to be mutated\n            if (resolveLinks) {\n              response.items = (0, _contentfulResolveResponse.default)(response, {\n                removeUnresolved: removeUnresolved,\n                itemEntryPoints: ['fields']\n              });\n            } // maps response items again after getters are attached\n\n\n            mappedResponseItems = mapResponseItems(response.items);\n\n            if (response.nextSyncToken) {\n              mappedResponseItems.nextSyncToken = response.nextSyncToken;\n            }\n\n            if (response.nextPageToken) {\n              mappedResponseItems.nextPageToken = response.nextPageToken;\n            }\n\n            return _context.abrupt(\"return\", (0, _contentfulSdkCore.freezeSys)((0, _stringifySafe.default)((0, _contentfulSdkCore.toPlainObject)(mappedResponseItems))));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _pagedSync.apply(this, arguments);\n}\n\nfunction mapResponseItems(items) {\n  var reducer = function reducer(type) {\n    return function (accumulated, item) {\n      if (item.sys.type === type) {\n        accumulated.push((0, _contentfulSdkCore.toPlainObject)(item));\n      }\n\n      return accumulated;\n    };\n  };\n\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\n\n\nfunction getSyncPage(_x3, _x4, _x5, _x6) {\n  return _getSyncPage.apply(this, arguments);\n}\n/**\n * Extracts token out of an url\n * @private\n */\n\n\nfunction _getSyncPage() {\n  _getSyncPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(http, items, query, _ref) {\n    var paginate, response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            paginate = _ref.paginate;\n\n            if (query.nextSyncToken) {\n              query.sync_token = query.nextSyncToken;\n              delete query.nextSyncToken;\n            }\n\n            if (query.nextPageToken) {\n              query.sync_token = query.nextPageToken;\n              delete query.nextPageToken;\n            }\n\n            if (query.sync_token) {\n              delete query.initial;\n              delete query.type;\n              delete query.content_type;\n              delete query.limit;\n            }\n\n            _context2.next = 6;\n            return http.get('sync', (0, _contentfulSdkCore.createRequestConfig)({\n              query: query\n            }));\n\n          case 6:\n            response = _context2.sent;\n            data = response.data || {};\n            items = items.concat(data.items || []);\n\n            if (!data.nextPageUrl) {\n              _context2.next = 17;\n              break;\n            }\n\n            if (!paginate) {\n              _context2.next = 14;\n              break;\n            }\n\n            delete query.initial;\n            query.sync_token = getToken(data.nextPageUrl);\n            return _context2.abrupt(\"return\", getSyncPage(http, items, query, {\n              paginate: paginate\n            }));\n\n          case 14:\n            return _context2.abrupt(\"return\", {\n              items: items,\n              nextPageToken: getToken(data.nextPageUrl)\n            });\n\n          case 17:\n            if (!data.nextSyncUrl) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              items: items,\n              nextSyncToken: getToken(data.nextSyncUrl)\n            });\n\n          case 21:\n            return _context2.abrupt(\"return\", {\n              items: []\n            });\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getSyncPage.apply(this, arguments);\n}\n\nfunction getToken(url) {\n  var urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}","map":{"version":3,"sources":["C:/xampp/htdocs/keta-blog/node_modules/contentful/dist/es-modules/paged-sync.js"],"names":["Object","defineProperty","exports","value","default","pagedSync","_contentfulSdkCore","require","_contentfulResolveResponse","_interopRequireDefault","_stringifySafe","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","http","query","options","undefined","initial","nextSyncToken","nextPageToken","Error","content_type","type","defaultOptions","resolveLinks","removeUnresolved","paginate","syncOptions","getSyncPage","response","items","itemEntryPoints","mappedResponseItems","mapResponseItems","freezeSys","toPlainObject","reducer","accumulated","item","sys","entries","reduce","assets","deletedEntries","deletedAssets","_ref","sync_token","limit","get","createRequestConfig","data","concat","nextPageUrl","getToken","nextSyncUrl","url","urlParts","split","replace"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pagedSync;\n\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\n\nvar _contentfulResolveResponse = _interopRequireDefault(require(\"contentful-resolve-response\"));\n\nvar _stringifySafe = _interopRequireDefault(require(\"./mixins/stringify-safe\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * @memberof Sync\n * @typedef SyncCollection\n * @prop {Array<Entities.Entry>} entries - All existing entries on first sync. New and updated entries on subsequent syncs.\n * @prop {Array<Entities.Asset>} assets - All existing assets on first sync. New and updated assets on subsequent syncs.\n * @prop {Array<Sync.DeletedEntry>} deletedEntries - List of deleted Entries since last sync\n * @prop {Array<Sync.DeletedAsset>} deletedAssets - List of deleted Assets since last sync\n * @prop {string} nextSyncToken - Token to be sent to the next sync call\n * @prop {function(): Object} toPlainObject() - Returns this Sync collection as a plain JS object\n * @prop {function(?function=, space=): Object} stringifySafe(replacer,space) - Stringifies the Sync collection, accounting for circular references. Circular references will be replaced with just a Link object, with a <code>circular</code> property set to <code>true</code>. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">MDN</a> and <a href=\"https://www.npmjs.com/package/json-stringify-safe\">json-stringify-safe</a> for more details on the arguments this method can take.\n */\n\n/**\n * Deleted Entries are the same as Entries, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedEntry\n * @type Entities.Entry\n */\n\n/**\n * Deleted Assets are the same as Assets, but only appear on the sync API.\n * @memberof Sync\n * @typedef DeletedAsset\n * @type Entities.Asset\n */\n\n/**\n * This module retrieves all the available pages for a sync operation\n * @private\n * @param {Object} http - HTTP client\n * @param {Object} query - Query object\n * @param {Object} options - Sync options object\n * @param {boolean} [options.resolveLinks = true] - If links should be resolved\n * @param {boolean} [options.removeUnresolved = false] - If unresolvable links should get removed\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<SyncCollection>}\n */\nasync function pagedSync(http, query) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!query || !query.initial && !query.nextSyncToken && !query.nextPageToken) {\n    throw new Error('Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing');\n  }\n\n  if (query && query.content_type && !query.type) {\n    query.type = 'Entry';\n  } else if (query && query.content_type && query.type && query.type !== 'Entry') {\n    throw new Error('When using the `content_type` filter your `type` parameter cannot be different from `Entry`.');\n  }\n\n  const defaultOptions = {\n    resolveLinks: true,\n    removeUnresolved: false,\n    paginate: true\n  };\n\n  const {\n    resolveLinks,\n    removeUnresolved,\n    paginate\n  } = _objectSpread(_objectSpread({}, defaultOptions), options);\n\n  const syncOptions = {\n    paginate\n  };\n  const response = await getSyncPage(http, [], query, syncOptions); // clones response.items used in includes because we don't want these to be mutated\n\n  if (resolveLinks) {\n    response.items = (0, _contentfulResolveResponse.default)(response, {\n      removeUnresolved,\n      itemEntryPoints: ['fields']\n    });\n  } // maps response items again after getters are attached\n\n\n  const mappedResponseItems = mapResponseItems(response.items);\n\n  if (response.nextSyncToken) {\n    mappedResponseItems.nextSyncToken = response.nextSyncToken;\n  }\n\n  if (response.nextPageToken) {\n    mappedResponseItems.nextPageToken = response.nextPageToken;\n  }\n\n  return (0, _contentfulSdkCore.freezeSys)((0, _stringifySafe.default)((0, _contentfulSdkCore.toPlainObject)(mappedResponseItems)));\n}\n/**\n * @private\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @return {Object} Entities mapped to an object for each entity type\n */\n\n\nfunction mapResponseItems(items) {\n  const reducer = type => {\n    return (accumulated, item) => {\n      if (item.sys.type === type) {\n        accumulated.push((0, _contentfulSdkCore.toPlainObject)(item));\n      }\n\n      return accumulated;\n    };\n  };\n\n  return {\n    entries: items.reduce(reducer('Entry'), []),\n    assets: items.reduce(reducer('Asset'), []),\n    deletedEntries: items.reduce(reducer('DeletedEntry'), []),\n    deletedAssets: items.reduce(reducer('DeletedAsset'), [])\n  };\n}\n/**\n * If the response contains a nextPageUrl, extracts the sync token to get the\n * next page and calls itself again with that token.\n * Otherwise, if the response contains a nextSyncUrl, extracts the sync token\n * and returns it.\n * On each call of this function, any retrieved items are collected in the\n * supplied items array, which gets returned in the end\n * @private\n * @param {Object} http\n * @param {Array<Entities.Entry|Entities.Array|Sync.DeletedEntry|Sync.DeletedAsset>} items\n * @param {Object} query\n * @param {Object} options - Sync page options object\n * @param {boolean} [options.paginate = true] - If further sync pages should automatically be crawled\n * @return {Promise<{items: Array, nextSyncToken: string}>}\n */\n\n\nasync function getSyncPage(http, items, query, _ref) {\n  let {\n    paginate\n  } = _ref;\n\n  if (query.nextSyncToken) {\n    query.sync_token = query.nextSyncToken;\n    delete query.nextSyncToken;\n  }\n\n  if (query.nextPageToken) {\n    query.sync_token = query.nextPageToken;\n    delete query.nextPageToken;\n  }\n\n  if (query.sync_token) {\n    delete query.initial;\n    delete query.type;\n    delete query.content_type;\n    delete query.limit;\n  }\n\n  const response = await http.get('sync', (0, _contentfulSdkCore.createRequestConfig)({\n    query: query\n  }));\n  const data = response.data || {};\n  items = items.concat(data.items || []);\n\n  if (data.nextPageUrl) {\n    if (paginate) {\n      delete query.initial;\n      query.sync_token = getToken(data.nextPageUrl);\n      return getSyncPage(http, items, query, {\n        paginate\n      });\n    }\n\n    return {\n      items: items,\n      nextPageToken: getToken(data.nextPageUrl)\n    };\n  } else if (data.nextSyncUrl) {\n    return {\n      items: items,\n      nextSyncToken: getToken(data.nextSyncUrl)\n    };\n  } else {\n    return {\n      items: []\n    };\n  }\n}\n/**\n * Extracts token out of an url\n * @private\n */\n\n\nfunction getToken(url) {\n  const urlParts = url.split('?');\n  return urlParts.length > 0 ? urlParts[1].replace('sync_token=', '') : '';\n}"]},"metadata":{},"sourceType":"script"}