{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\keta-blog\\\\src\\\\containers\\\\Detail\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Author from '../../components/Author';\nimport { useParams } from 'react-router-dom';\nimport { PostContext } from '../../context';\nimport { useContext } from 'react';\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = props => {\n  _s();\n\n  let {\n    slug\n  } = useParams();\n  let context = useContext(PostContext);\n  let {\n    getPost\n  } = context;\n  let detail = getPost(slug);\n\n  if (!detail) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n\n  let {\n    title,\n    category,\n    author,\n    dateCreated,\n    content\n  } = detail;\n  const richTextOptions = {\n    renderNode: {\n      [BLOCKS.EMBEDDED_ASSET]: node => {\n        const {\n          title,\n          description,\n          file\n        } = node.data.target.fields;\n        const mimeType = file.contentType;\n        const mimeGroup = mimeType.split('/')[0];\n\n        switch (mimeGroup) {\n          case 'image':\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-responsive\",\n              title: title ? title : null,\n              alt: description ? description : null,\n              src: file.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 20\n            }, this);\n\n          case 'application':\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              alt: description ? description : null,\n              href: file.url,\n              children: title ? title : file.details.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 20\n            }, this);\n\n          default:\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'red',\n                color: 'white'\n              },\n              children: [\" \", mimeType, \" embedded asset \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 20\n            }, this);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"post-detail__entry-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        className: \"post-detail__cat\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-detail__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-detail__entry-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-detail__posted-on\",\n          children: [\"Posted on\\xA0\", /*#__PURE__*/_jsxDEV(\"time\", {\n            className: \"post-detail__datetime\",\n            dateTime: \"2019-08-08T13:56:34+00:00\",\n            children: dateCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"post-detail__byline\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-detail__by\",\n            children: [\"\\xA0by \", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"post-detail__author\",\n              href: author.url,\n              children: author.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail__content\",\n      children: documentToReactComponents(content, richTextOptions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail__author\",\n      children: /*#__PURE__*/_jsxDEV(Author, { ...author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Detail, \"q+Ex3yOB9PJK+ZHBG0LDoipQGIE=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["C:/xampp/htdocs/keta-blog/src/containers/Detail/index.js"],"names":["React","Author","useParams","PostContext","useContext","BLOCKS","documentToReactComponents","Detail","props","slug","context","getPost","detail","title","category","author","dateCreated","content","richTextOptions","renderNode","EMBEDDED_ASSET","node","description","file","data","target","fields","mimeType","contentType","mimeGroup","split","url","details","fileName","backgroundColor","color","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Author from '../../components/Author';\r\nimport { useParams } from 'react-router-dom'\r\nimport {PostContext} from '../../context';\r\nimport {useContext} from 'react';\r\nimport { BLOCKS } from '@contentful/rich-text-types';\r\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\r\n\r\nconst Detail = (props) => {\r\n\tlet { slug } = useParams();\r\n\tlet context = useContext(PostContext);\r\n\tlet {getPost} = context;\r\n\tlet detail = getPost(slug);\r\n\t\r\n\r\n\tif ( ! detail) {\r\n\t\treturn <p>not found</p>;\r\n\t} \r\n\r\n\tlet {title, category, author, dateCreated, content} = detail;\r\n\r\n\tconst richTextOptions = {\r\n  \t\trenderNode: {\r\n\t\t    [BLOCKS.EMBEDDED_ASSET]: (node) => {\r\n\t\t      const { title, description, file } = node.data.target.fields;\r\n\t\t      const mimeType = file.contentType\r\n\t\t      const mimeGroup = mimeType.split('/')[0]\r\n\r\n\t\t      switch (mimeGroup) {\r\n\t\t        case 'image':\r\n\t\t          return <img className=\"img-responsive\"\r\n\t\t            title={ title ? title : null}\r\n\t\t            alt={description ?  description : null}\r\n\t\t            src={file.url}\r\n\t\t          />\r\n\t\t        case 'application':\r\n\t\t          return <a\r\n\t\t            alt={description ?  description : null}\r\n\t\t            href={file.url}\r\n\t\t            >{ title ? title : file.details.fileName }\r\n\t\t          </a>\r\n\t\t        default:\r\n\t\t          return <span style={{backgroundColor: 'red', color: 'white'}}> {mimeType} embedded asset </span>\r\n\t\t      }\r\n\t\t      \r\n\t\t    }\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"content-container post-detail\">\r\n\t\t\t<header className=\"post-detail__entry-header\">\r\n\t\t\t\t<a href=\"!#\" className=\"post-detail__cat\">{category}</a>\r\n\t\t\t\t<h1 className=\"post-detail__title\">{title}</h1>\r\n\t\t\t\t<div className=\"post-detail__entry-meta\">\r\n\t\t\t\t\t<span className=\"post-detail__posted-on\">\r\n\t\t\t\t\t\tPosted on&nbsp;\r\n\t\t\t\t\t\t<time className=\"post-detail__datetime\" dateTime=\"2019-08-08T13:56:34+00:00\">{dateCreated}</time>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"post-detail__byline\">\r\n\t\t\t\t\t\t<span className=\"post-detail__by\">&nbsp;by <a className=\"post-detail__author\" href={author.url}>{author.name}</a></span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<div className=\"post-detail__content\">\r\n\t\t\t\t{ documentToReactComponents (content, richTextOptions) }\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"post-detail__author\">\r\n\t\t\t\t<Author {...author} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Detail;"]},"metadata":{},"sourceType":"module"}