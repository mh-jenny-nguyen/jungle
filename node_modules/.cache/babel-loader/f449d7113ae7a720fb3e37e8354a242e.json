{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\keta-blog\\\\src\\\\context\\\\portfolio.js\";\nimport React, { Component } from 'react';\nimport Client from '../contentful';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioContext = /*#__PURE__*/React.createContext();\n\nclass PortfolioProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      currentItems: [],\n      loading: true,\n      currentPage: 1,\n      previousPage: 1,\n      nextPage: 2,\n      numberPerPage: 10,\n      totalOfItem: 0,\n      totalOfPage: 0\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"portfolio\"\n        });\n        let items = this.formatData(response.items);\n        let currentItems = this.getItemsByPage(this.state.currentPage, items);\n        console.log(currentItems);\n        this.setState({\n          item: items,\n          loading: false,\n          TotalOfItems: items.length,\n          currentItems: currentItems,\n          totalOfPage: Math.ceil(items.length / this.state.numberPerPage)\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getItemsByPage = (page = 1, items) => {\n      debugger;\n      let startIndex = 0;\n      let endIndex = this.state.numberPerPage;\n\n      if (page > 1) {\n        startIndex = (page - 1) * this.state.numberPerPage;\n        endIndex = this.state.numberPerPage * page - 1;\n      }\n\n      let tempItems = items.slice(startIndex, endIndex);\n      return tempItems;\n    };\n\n    this.handleLoadPage = (page = 1) => {\n      debugger;\n      let currentItems = this.getPostByPage(page, this.state.items);\n      this.setState({\n        currentPage: page,\n        currentPosts: currentItems,\n        previousPage: page > 1 ? page - 1 : page,\n        nextPage: page < this.state.totalOfItem ? page + 1 : this.state.totalOfItem\n      });\n    };\n\n    this.formatData = items => {\n      debugger;\n      let tempItems = items.map(item => {\n        let id = item.sys.id;\n        let image = item.fields.image.fields.file.url;\n        let post = {\n          id,\n          image\n        };\n        return post;\n      });\n      return tempItems;\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PortfolioContext.Provider, {\n      value: { ...this.state,\n        handleLoadPage: this.handleLoadPage,\n        getItemsByPage: this.getItemsByPage\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst PortfolioConsumer = PortfolioContext.Consumer;\nexport function withPortfolioConsumer(Component) {\n  return function consumerWrapper(props) {\n    return /*#__PURE__*/_jsxDEV(PortfolioConsumer, {\n      children: value => /*#__PURE__*/_jsxDEV(Component, { ...props,\n        context: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this);\n  };\n}\nexport { PortfolioProvider, PortfolioConsumer, PortfolioContext };","map":{"version":3,"sources":["C:/xampp/htdocs/keta-blog/src/context/portfolio.js"],"names":["React","Component","Client","PortfolioContext","createContext","PortfolioProvider","state","items","currentItems","loading","currentPage","previousPage","nextPage","numberPerPage","totalOfItem","totalOfPage","getData","response","getEntries","content_type","formatData","getItemsByPage","console","log","setState","item","TotalOfItems","length","Math","ceil","error","page","startIndex","endIndex","tempItems","slice","handleLoadPage","getPostByPage","currentPosts","map","id","sys","image","fields","file","url","post","componentDidMount","render","props","children","PortfolioConsumer","Consumer","withPortfolioConsumer","consumerWrapper","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,gBAAgB,gBAAGH,KAAK,CAACI,aAAN,EAAzB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACzCK,KADyC,GACjC;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,YAAY,EAAE,EAFP;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,WAAW,EAAE,CAJN;AAKPC,MAAAA,YAAY,EAAE,CALP;AAMPC,MAAAA,QAAQ,EAAE,CANH;AAOPC,MAAAA,aAAa,EAAE,EAPR;AAQPC,MAAAA,WAAW,EAAE,CARN;AASPC,MAAAA,WAAW,EAAE;AATN,KADiC;;AAAA,SAazCC,OAbyC,GAa/B,YAAY;AACrB,UAAG;AACF,YAAIC,QAAQ,GAAG,MAAMf,MAAM,CAACgB,UAAP,CAAkB;AACtCC,UAAAA,YAAY,EAAE;AADwB,SAAlB,CAArB;AAIA,YAAIZ,KAAK,GAAG,KAAKa,UAAL,CAAgBH,QAAQ,CAACV,KAAzB,CAAZ;AACA,YAAIC,YAAY,GAAG,KAAKa,cAAL,CAAoB,KAAKf,KAAL,CAAWI,WAA/B,EAA4CH,KAA5C,CAAnB;AACSe,QAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AAET,aAAKgB,QAAL,CAAc;AACbC,UAAAA,IAAI,EAAElB,KADO;AAEbE,UAAAA,OAAO,EAAE,KAFI;AAGbiB,UAAAA,YAAY,EAAEnB,KAAK,CAACoB,MAHP;AAIbnB,UAAAA,YAAY,EAAEA,YAJD;AAKbO,UAAAA,WAAW,EAAEa,IAAI,CAACC,IAAL,CAAUtB,KAAK,CAACoB,MAAN,GAAe,KAAKrB,KAAL,CAAWO,aAApC;AALA,SAAd;AAQA,OAjBD,CAiBE,OAAOiB,KAAP,EAAc;AACfR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA;AACD,KAlCwC;;AAAA,SAoCzCT,cApCyC,GAoCxB,CAACU,IAAI,GAAG,CAAR,EAAWxB,KAAX,KAAqB;AAC/B;AACN,UAAIyB,UAAU,GAAG,CAAjB;AACA,UAAIC,QAAQ,GAAG,KAAK3B,KAAL,CAAWO,aAA1B;;AAEA,UAAGkB,IAAI,GAAG,CAAV,EAAa;AACZC,QAAAA,UAAU,GAAG,CAACD,IAAI,GAAG,CAAR,IAAa,KAAKzB,KAAL,CAAWO,aAArC;AACAoB,QAAAA,QAAQ,GAAI,KAAK3B,KAAL,CAAWO,aAAX,GAA2BkB,IAA5B,GAAoC,CAA/C;AACA;;AAED,UAAIG,SAAS,GAAG3B,KAAK,CAAC4B,KAAN,CAAYH,UAAZ,EAAwBC,QAAxB,CAAhB;AAEA,aAAOC,SAAP;AACA,KAjDwC;;AAAA,SAmDzCE,cAnDyC,GAmDvB,CAACL,IAAI,GAAG,CAAR,KAAc;AAC/B;AACA,UAAIvB,YAAY,GAAG,KAAK6B,aAAL,CAAmBN,IAAnB,EAAyB,KAAKzB,KAAL,CAAWC,KAApC,CAAnB;AAEA,WAAKiB,QAAL,CAAc;AACbd,QAAAA,WAAW,EAAEqB,IADA;AAEbO,QAAAA,YAAY,EAAE9B,YAFD;AAGbG,QAAAA,YAAY,EAAGoB,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsBA,IAHxB;AAIbnB,QAAAA,QAAQ,EAAGmB,IAAI,GAAG,KAAKzB,KAAL,CAAWQ,WAAlB,GAAgCiB,IAAI,GAAG,CAAvC,GAA2C,KAAKzB,KAAL,CAAWQ;AAJpD,OAAd;AAMC,KA7DuC;;AAAA,SAmEzCM,UAnEyC,GAmE1Bb,KAAD,IAAW;AAClB;AACN,UAAI2B,SAAS,GAAG3B,KAAK,CAACgC,GAAN,CAAUd,IAAI,IAAI;AAEjC,YAAIe,EAAE,GAAGf,IAAI,CAACgB,GAAL,CAASD,EAAlB;AACA,YAAIE,KAAK,GAAGjB,IAAI,CAACkB,MAAL,CAAYD,KAAZ,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8BC,GAA1C;AAEA,YAAIC,IAAI,GAAG;AAACN,UAAAA,EAAD;AAAKE,UAAAA;AAAL,SAAX;AAEA,eAAOI,IAAP;AACA,OARe,CAAhB;AAUA,aAAOZ,SAAP;AACA,KAhFwC;AAAA;;AA+DzCa,EAAAA,iBAAiB,GAAI;AACpB,SAAK/B,OAAL;AACA;;AAiBDgC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAE,EAAE,GAAG,KAAK1C,KAAV;AAAiB8B,QAAAA,cAAc,EAAE,KAAKA,cAAtC;AAAsDf,QAAAA,cAAc,EAAE,KAAKA;AAA3E,OAAlC;AAAA,gBACE,KAAK4B,KAAL,CAAWC;AADb;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAxFwC;;AA2F1C,MAAMC,iBAAiB,GAAGhD,gBAAgB,CAACiD,QAA3C;AAEA,OAAO,SAASC,qBAAT,CAA+BpD,SAA/B,EAA0C;AAChD,SAAO,SAASqD,eAAT,CAAyBL,KAAzB,EAAgC;AACtC,wBAAO,QAAC,iBAAD;AAAA,gBACLM,KAAK,iBAAI,QAAC,SAAD,OAAeN,KAAf;AAAsB,QAAA,OAAO,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAAP;AAGA,GAJD;AAKA;AAED,SAAQlD,iBAAR,EAA2B8C,iBAA3B,EAA8ChD,gBAA9C","sourcesContent":["import React, {Component} from 'react';\r\nimport Client from '../contentful';\r\n\r\nconst PortfolioContext = React.createContext();\r\n\r\nclass PortfolioProvider extends Component {\r\n\tstate = {\r\n\t\titems: [],\r\n\t\tcurrentItems: [],\r\n\t\tloading: true,\r\n\t\tcurrentPage: 1,\r\n\t\tpreviousPage: 1,\r\n\t\tnextPage: 2,\r\n\t\tnumberPerPage: 10,\r\n\t\ttotalOfItem: 0,\r\n\t\ttotalOfPage: 0,\r\n\t}\r\n\r\n\tgetData = async () => {\r\n\t\ttry{\r\n\t\t\tlet response = await Client.getEntries({\r\n\t\t\t\tcontent_type: \"portfolio\",\r\n\t\t\t});\r\n\r\n\t\t\tlet items = this.formatData(response.items);\r\n\t\t\tlet currentItems = this.getItemsByPage(this.state.currentPage, items);\r\n            console.log(currentItems);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\titem: items,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tTotalOfItems: items.length,\r\n\t\t\t\tcurrentItems: currentItems,\r\n\t\t\t\ttotalOfPage: Math.ceil(items.length / this.state.numberPerPage)\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tgetItemsByPage = (page = 1, items) => {\r\n        debugger;\r\n\t\tlet startIndex = 0;\r\n\t\tlet endIndex = this.state.numberPerPage;\r\n\r\n\t\tif(page > 1) {\r\n\t\t\tstartIndex = (page - 1) * this.state.numberPerPage;\r\n\t\t\tendIndex = (this.state.numberPerPage * page) - 1;\r\n\t\t}\r\n\t\t\r\n\t\tlet tempItems = items.slice(startIndex, endIndex);\r\n\r\n\t\treturn tempItems;\r\n\t}\r\n\r\n\thandleLoadPage =  (page = 1) => {\r\n\t\tdebugger;\r\n\t\tlet currentItems = this.getPostByPage(page, this.state.items);\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentPage: page,\r\n\t\t\tcurrentPosts: currentItems,\r\n\t\t\tpreviousPage: (page > 1 ? page - 1 : page ),\r\n\t\t\tnextPage: (page < this.state.totalOfItem ? page + 1 : this.state.totalOfItem),\r\n\t\t});\r\n \t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.getData();\r\n\t}\r\n\r\n\tformatData =  (items) => {\r\n        debugger;\r\n\t\tlet tempItems = items.map(item => {\r\n\r\n\t\t\tlet id = item.sys.id\r\n\t\t\tlet image = item.fields.image.fields.file.url;\r\n\r\n\t\t\tlet post = {id, image};\r\n\r\n\t\t\treturn post;\r\n\t\t});\r\n\r\n\t\treturn tempItems;\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<PortfolioContext.Provider value={{ ...this.state, handleLoadPage: this.handleLoadPage, getItemsByPage: this.getItemsByPage }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</PortfolioContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PortfolioConsumer = PortfolioContext.Consumer;\r\n\r\nexport function withPortfolioConsumer(Component) {\r\n\treturn function consumerWrapper(props) {\r\n\t\treturn <PortfolioConsumer>\r\n\t\t\t{value => <Component {...props} context={value} /> }\r\n\t\t</PortfolioConsumer>\r\n\t}\r\n}\r\n\r\nexport {PortfolioProvider, PortfolioConsumer, PortfolioContext}"]},"metadata":{},"sourceType":"module"}