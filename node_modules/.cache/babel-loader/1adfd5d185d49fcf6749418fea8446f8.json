{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\keta-blog\\\\src\\\\containers\\\\Search\\\\index.js\";\nimport React from \"react\";\nimport { withPostConsumer } from \"../../context/post\";\nimport Post from \"../../components/Post\";\nimport PageHeader from \"../../components/PageHeader\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  context\n}) => {\n  const {\n    filterPosts,\n    keyword\n  } = context;\n  const postList = filterPosts.map(item => {\n    return /*#__PURE__*/_jsxDEV(Post, { ...item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-header__title\",\n        children: [\"Search result for \", `\"${keyword}\"`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page-header__sub-title align-left\",\n        children: [filterPosts.length, \"\\xA0\", filterPosts.lenght > 1 ? \"results\" : \"result\", \"\\xA0was found\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), filterPosts.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-found content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Opps...Nothing to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), filterPosts.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n      dataList: filterPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Search;\nexport default _c2 = withPostConsumer(Search);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/xampp/htdocs/keta-blog/src/containers/Search/index.js"],"names":["React","withPostConsumer","Post","PageHeader","Search","context","filterPosts","keyword","postList","map","item","id","length","lenght"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA2BF,OAAjC;AACA,QAAMG,QAAQ,GAAGF,WAAW,CAACG,GAAZ,CAAiBC,IAAD,IAAU;AACzC,wBAAO,QAAC,IAAD,OAAwBA;AAAxB,OAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFgB,CAAjB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE,QAAC,UAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA,yCACsB,IAAGJ,OAAQ,GADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,mCAAd;AAAA,mBACGD,WAAW,CAACM,MADf,UAEGN,WAAW,CAACO,MAAZ,GAAqB,CAArB,GAAyB,SAAzB,GAAqC,QAFxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGP,WAAW,CAACM,MAAZ,IAAsB,CAAtB,iBACC;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXJ,EAgBGN,WAAW,CAACM,MAAZ,GAAqB,CAArB,iBAA0B,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,YAhB7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1BD;;KAAMF,M;AA4BN,qBAAeH,gBAAgB,CAACG,MAAD,CAA/B","sourcesContent":["import React from \"react\";\r\nimport { withPostConsumer } from \"../../context/post\";\r\nimport Post from \"../../components/Post\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport \"./style.scss\";\r\n\r\nconst Search = ({ context }) => {\r\n  const { filterPosts, keyword } = context;\r\n  const postList = filterPosts.map((item) => {\r\n    return <Post key={item.id} {...item} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"search-page\">\r\n      <PageHeader>\r\n        <h1 className=\"page-header__title\">\r\n          Search result for {`\"${keyword}\"`}\r\n        </h1>\r\n        <h3 className=\"page-header__sub-title align-left\">\r\n          {filterPosts.length}&nbsp;\r\n          {filterPosts.lenght > 1 ? \"results\" : \"result\"}&nbsp;was found\r\n        </h3>\r\n      </PageHeader>\r\n      {filterPosts.length <= 0 && (\r\n        <div className=\"not-found content-container\">\r\n          <span>Opps...Nothing to show</span>\r\n        </div>\r\n      )}\r\n\r\n      {filterPosts.length > 0 && <Posts dataList={filterPosts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withPostConsumer(Search);\r\n"]},"metadata":{},"sourceType":"module"}